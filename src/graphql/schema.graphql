type Address {
  id: String
  extension: [Extension]
  use: code
  _use: ElementBase
  type: code
  _type: ElementBase
  text: String
  _text: ElementBase
  line: String
  _line: [ElementBase]
  city: String
  _city: ElementBase
  district: String
  _district: ElementBase
  state: String
  _state: ElementBase
  postalCode: String
  _postalCode: ElementBase
  country: String
  _country: ElementBase
  period: Period
}

input AddressInput {
  id: String
  extension: [ExtensionInput]
  use: code
  _use: ElementBaseInput
  type: code
  _type: ElementBaseInput
  text: String
  _text: ElementBaseInput
  line: String
  _line: [ElementBaseInput]
  city: String
  _city: ElementBaseInput
  district: String
  _district: ElementBaseInput
  state: String
  _state: ElementBaseInput
  postalCode: String
  _postalCode: ElementBaseInput
  country: String
  _country: ElementBaseInput
  period: PeriodInput
}

type Age {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input AgeInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type Allows {
  resources: [resourcesEnum]
  permissions: [permissionsEnum]
}

type Annotation {
  id: String
  extension: [Extension]
  authorReference: Reference
  authorString: String
  _authorString: ElementBase
  time: dateTime
  _time: ElementBase
  text: String
  _text: ElementBase
}

input AnnotationInput {
  id: String
  extension: [ExtensionInput]
  authorReference: ReferenceInput
  authorString: String
  _authorString: ElementBaseInput
  time: dateTime
  _time: ElementBaseInput
  text: String
  _text: ElementBaseInput
}

type Attachment {
  id: String
  extension: [Extension]
  contentType: code
  _contentType: ElementBase
  language: code
  _language: ElementBase
  data: base64Binary
  _data: ElementBase
  url: String
  _url: ElementBase
  size: unsignedInt
  _size: ElementBase
  hash: base64Binary
  _hash: ElementBase
  title: String
  _title: ElementBase
  creation: dateTime
  _creation: ElementBase
}

input AttachmentInput {
  id: String
  extension: [ExtensionInput]
  contentType: code
  _contentType: ElementBaseInput
  language: code
  _language: ElementBaseInput
  data: base64Binary
  _data: ElementBaseInput
  url: String
  _url: ElementBaseInput
  size: unsignedInt
  _size: ElementBaseInput
  hash: base64Binary
  _hash: ElementBaseInput
  title: String
  _title: ElementBaseInput
  creation: dateTime
  _creation: ElementBaseInput
}

# FHIR Defined Primitive types
scalar base64Binary

# Type boolean: use GraphQL scalar type Boolean
scalar code

type CodeableConcept {
  id: String
  extension: [Extension]
  coding: [Coding]
  text: String
  _text: ElementBase
}

input CodeableConceptInput {
  id: String
  extension: [ExtensionInput]
  coding: [CodingInput]
  text: String
  _text: ElementBaseInput
}

type Coding {
  id: String
  extension: [Extension]
  system: String
  _system: ElementBase
  version: String
  _version: ElementBase
  code: code
  _code: ElementBase
  display: String
  _display: ElementBase
  userSelected: Boolean
  _userSelected: ElementBase
}

input CodingInput {
  id: String
  extension: [ExtensionInput]
  system: String
  _system: ElementBaseInput
  version: String
  _version: ElementBaseInput
  code: code
  _code: ElementBaseInput
  display: String
  _display: ElementBaseInput
  userSelected: Boolean
  _userSelected: ElementBaseInput
}

scalar composite

type ContactDetail {
  id: String
  extension: [Extension]
  name: String
  _name: ElementBase
  telecom: [ContactPoint]
}

input ContactDetailInput {
  id: String
  extension: [ExtensionInput]
  name: String
  _name: ElementBaseInput
  telecom: [ContactPointInput]
}

type ContactPoint {
  id: String
  extension: [Extension]
  system: code
  _system: ElementBase
  value: String
  _value: ElementBase
  use: code
  _use: ElementBase
  rank: positiveInt
  _rank: ElementBase
  period: Period
}

input ContactPointInput {
  id: String
  extension: [ExtensionInput]
  system: code
  _system: ElementBaseInput
  value: String
  _value: ElementBaseInput
  use: code
  _use: ElementBaseInput
  rank: positiveInt
  _rank: ElementBaseInput
  period: PeriodInput
}

type Contributor {
  id: String
  extension: [Extension]
  type: code
  _type: ElementBase
  name: String
  _name: ElementBase
  contact: [ContactDetail]
}

input ContributorInput {
  id: String
  extension: [ExtensionInput]
  type: code
  _type: ElementBaseInput
  name: String
  _name: ElementBaseInput
  contact: [ContactDetailInput]
}

type Count {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input CountInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type DataRequirement {
  id: String
  extension: [Extension]
  type: code
  _type: ElementBase
  profile: String
  _profile: [ElementBase]
  mustSupport: String
  _mustSupport: [ElementBase]
  codeFilter: [DataRequirementCodeFilter]
  dateFilter: [DataRequirementDateFilter]
}

type DataRequirementCodeFilter {
  id: String
  extension: [Extension]
  path: String
  _path: ElementBase
  valueSetString: String
  _valueSetString: ElementBase
  valueSetReference: Reference
  valueCode: code
  _valueCode: [ElementBase]
  valueCoding: [Coding]
  valueCodeableConcept: [CodeableConcept]
}

input DataRequirementCodeFilterInput {
  id: String
  extension: [ExtensionInput]
  path: String
  _path: ElementBaseInput
  valueSetString: String
  _valueSetString: ElementBaseInput
  valueSetReference: ReferenceInput
  valueCode: code
  _valueCode: [ElementBaseInput]
  valueCoding: [CodingInput]
  valueCodeableConcept: [CodeableConceptInput]
}

type DataRequirementDateFilter {
  id: String
  extension: [Extension]
  path: String
  _path: ElementBase
  valueDateTime: dateTime
  _valueDateTime: ElementBase
  valuePeriod: Period
  valueDuration: Duration
}

input DataRequirementDateFilterInput {
  id: String
  extension: [ExtensionInput]
  path: String
  _path: ElementBaseInput
  valueDateTime: dateTime
  _valueDateTime: ElementBaseInput
  valuePeriod: PeriodInput
  valueDuration: DurationInput
}

input DataRequirementInput {
  id: String
  extension: [ExtensionInput]
  type: code
  _type: ElementBaseInput
  profile: String
  _profile: [ElementBaseInput]
  mustSupport: String
  _mustSupport: [ElementBaseInput]
  codeFilter: [DataRequirementCodeFilterInput]
  dateFilter: [DataRequirementDateFilterInput]
}

scalar Date

scalar dateTime

scalar decimal

type Distance {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input DistanceInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type Dosage {
  id: String
  extension: [Extension]
  sequence: Int
  _sequence: ElementBase
  text: String
  _text: ElementBase
  additionalInstruction: [CodeableConcept]
  patientInstruction: String
  _patientInstruction: ElementBase
  timing: Timing
  asNeededBoolean: Boolean
  _asNeededBoolean: ElementBase
  asNeededCodeableConcept: CodeableConcept
  site: CodeableConcept
  route: CodeableConcept
  method: CodeableConcept
  doseRange: Range
  doseQuantity: Quantity
  maxDosePerPeriod: Ratio
  maxDosePerAdministration: Quantity
  maxDosePerLifetime: Quantity
  rateRatio: Ratio
  rateRange: Range
  rateQuantity: Quantity
}

input DosageInput {
  id: String
  extension: [ExtensionInput]
  sequence: Int
  _sequence: ElementBaseInput
  text: String
  _text: ElementBaseInput
  additionalInstruction: [CodeableConceptInput]
  patientInstruction: String
  _patientInstruction: ElementBaseInput
  timing: TimingInput
  asNeededBoolean: Boolean
  _asNeededBoolean: ElementBaseInput
  asNeededCodeableConcept: CodeableConceptInput
  site: CodeableConceptInput
  route: CodeableConceptInput
  method: CodeableConceptInput
  doseRange: RangeInput
  doseQuantity: QuantityInput
  maxDosePerPeriod: RatioInput
  maxDosePerAdministration: QuantityInput
  maxDosePerLifetime: QuantityInput
  rateRatio: RatioInput
  rateRange: RangeInput
  rateQuantity: QuantityInput
}

type Duration {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input DurationInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type ElementBase {
  id: ID
  extension: [Extension]
}

input ElementBaseInput {
  id: ID
  extension: [ExtensionInput]
}

type ElementDefinition {
  id: String
  extension: [Extension]
  path: String
  _path: ElementBase
  representation: code
  _representation: [ElementBase]
  sliceName: String
  _sliceName: ElementBase
  label: String
  _label: ElementBase
  code: [Coding]
  slicing: ElementDefinitionSlicing
  short: String
  _short: ElementBase
  definition: markdown
  _definition: ElementBase
  comment: markdown
  _comment: ElementBase
  requirements: markdown
  _requirements: ElementBase
  alias: String
  _alias: [ElementBase]
  min: unsignedInt
  _min: ElementBase
  max: String
  _max: ElementBase
  base: ElementDefinitionBase
  contentReference: String
  _contentReference: ElementBase
  type: [ElementDefinitionType]
  defaultValueBase64Binary: base64Binary
  _defaultValueBase64Binary: ElementBase
  defaultValueBoolean: Boolean
  _defaultValueBoolean: ElementBase
  defaultValueCode: code
  _defaultValueCode: ElementBase
  defaultValueDate: Date
  _defaultValueDate: ElementBase
  defaultValueDateTime: dateTime
  _defaultValueDateTime: ElementBase
  defaultValueDecimal: decimal
  _defaultValueDecimal: ElementBase
  defaultValueId: ID
  _defaultValueId: ElementBase
  defaultValueInstant: instant
  _defaultValueInstant: ElementBase
  defaultValueInteger: Int
  _defaultValueInteger: ElementBase
  defaultValueMarkdown: markdown
  _defaultValueMarkdown: ElementBase
  defaultValueOid: oid
  _defaultValueOid: ElementBase
  defaultValuePositiveInt: positiveInt
  _defaultValuePositiveInt: ElementBase
  defaultValueString: String
  _defaultValueString: ElementBase
  defaultValueTime: time
  _defaultValueTime: ElementBase
  defaultValueUnsignedInt: unsignedInt
  _defaultValueUnsignedInt: ElementBase
  defaultValueUri: String
  _defaultValueUri: ElementBase
  defaultValueAddress: Address
  defaultValueAge: Age
  defaultValueAnnotation: Annotation
  defaultValueAttachment: Attachment
  defaultValueCodeableConcept: CodeableConcept
  defaultValueCoding: Coding
  defaultValueContactPoint: ContactPoint
  defaultValueCount: Count
  defaultValueDistance: Distance
  defaultValueDuration: Duration
  defaultValueHumanName: HumanName
  defaultValueIdentifier: Identifier
  defaultValueMoney: Money
  defaultValuePeriod: Period
  defaultValueQuantity: Quantity
  defaultValueRange: Range
  defaultValueRatio: Ratio
  defaultValueReference: Reference
  defaultValueSampledData: SampledData
  defaultValueSignature: Signature
  defaultValueTiming: Timing
  defaultValueMeta: Meta
  meaningWhenMissing: markdown
  _meaningWhenMissing: ElementBase
  orderMeaning: String
  _orderMeaning: ElementBase
  fixedBase64Binary: base64Binary
  _fixedBase64Binary: ElementBase
  fixedBoolean: Boolean
  _fixedBoolean: ElementBase
  fixedCode: code
  _fixedCode: ElementBase
  fixedDate: Date
  _fixedDate: ElementBase
  fixedDateTime: dateTime
  _fixedDateTime: ElementBase
  fixedDecimal: decimal
  _fixedDecimal: ElementBase
  fixedId: ID
  _fixedId: ElementBase
  fixedInstant: instant
  _fixedInstant: ElementBase
  fixedInteger: Int
  _fixedInteger: ElementBase
  fixedMarkdown: markdown
  _fixedMarkdown: ElementBase
  fixedOid: oid
  _fixedOid: ElementBase
  fixedPositiveInt: positiveInt
  _fixedPositiveInt: ElementBase
  fixedString: String
  _fixedString: ElementBase
  fixedTime: time
  _fixedTime: ElementBase
  fixedUnsignedInt: unsignedInt
  _fixedUnsignedInt: ElementBase
  fixedUri: String
  _fixedUri: ElementBase
  fixedAddress: Address
  fixedAge: Age
  fixedAnnotation: Annotation
  fixedAttachment: Attachment
  fixedCodeableConcept: CodeableConcept
  fixedCoding: Coding
  fixedContactPoint: ContactPoint
  fixedCount: Count
  fixedDistance: Distance
  fixedDuration: Duration
  fixedHumanName: HumanName
  fixedIdentifier: Identifier
  fixedMoney: Money
  fixedPeriod: Period
  fixedQuantity: Quantity
  fixedRange: Range
  fixedRatio: Ratio
  fixedReference: Reference
  fixedSampledData: SampledData
  fixedSignature: Signature
  fixedTiming: Timing
  fixedMeta: Meta
  patternBase64Binary: base64Binary
  _patternBase64Binary: ElementBase
  patternBoolean: Boolean
  _patternBoolean: ElementBase
  patternCode: code
  _patternCode: ElementBase
  patternDate: Date
  _patternDate: ElementBase
  patternDateTime: dateTime
  _patternDateTime: ElementBase
  patternDecimal: decimal
  _patternDecimal: ElementBase
  patternId: ID
  _patternId: ElementBase
  patternInstant: instant
  _patternInstant: ElementBase
  patternInteger: Int
  _patternInteger: ElementBase
  patternMarkdown: markdown
  _patternMarkdown: ElementBase
  patternOid: oid
  _patternOid: ElementBase
  patternPositiveInt: positiveInt
  _patternPositiveInt: ElementBase
  patternString: String
  _patternString: ElementBase
  patternTime: time
  _patternTime: ElementBase
  patternUnsignedInt: unsignedInt
  _patternUnsignedInt: ElementBase
  patternUri: String
  _patternUri: ElementBase
  patternAddress: Address
  patternAge: Age
  patternAnnotation: Annotation
  patternAttachment: Attachment
  patternCodeableConcept: CodeableConcept
  patternCoding: Coding
  patternContactPoint: ContactPoint
  patternCount: Count
  patternDistance: Distance
  patternDuration: Duration
  patternHumanName: HumanName
  patternIdentifier: Identifier
  patternMoney: Money
  patternPeriod: Period
  patternQuantity: Quantity
  patternRange: Range
  patternRatio: Ratio
  patternReference: Reference
  patternSampledData: SampledData
  patternSignature: Signature
  patternTiming: Timing
  patternMeta: Meta
  example: [ElementDefinitionExample]
  minValueDate: Date
  _minValueDate: ElementBase
  minValueDateTime: dateTime
  _minValueDateTime: ElementBase
  minValueInstant: instant
  _minValueInstant: ElementBase
  minValueTime: time
  _minValueTime: ElementBase
  minValueDecimal: decimal
  _minValueDecimal: ElementBase
  minValueInteger: Int
  _minValueInteger: ElementBase
  minValuePositiveInt: positiveInt
  _minValuePositiveInt: ElementBase
  minValueUnsignedInt: unsignedInt
  _minValueUnsignedInt: ElementBase
  minValueQuantity: Quantity
  maxValueDate: Date
  _maxValueDate: ElementBase
  maxValueDateTime: dateTime
  _maxValueDateTime: ElementBase
  maxValueInstant: instant
  _maxValueInstant: ElementBase
  maxValueTime: time
  _maxValueTime: ElementBase
  maxValueDecimal: decimal
  _maxValueDecimal: ElementBase
  maxValueInteger: Int
  _maxValueInteger: ElementBase
  maxValuePositiveInt: positiveInt
  _maxValuePositiveInt: ElementBase
  maxValueUnsignedInt: unsignedInt
  _maxValueUnsignedInt: ElementBase
  maxValueQuantity: Quantity
  maxLength: Int
  _maxLength: ElementBase
  condition: ID
  _condition: [ElementBase]
  constraint: [ElementDefinitionConstraint]
  mustSupport: Boolean
  _mustSupport: ElementBase
  isModifier: Boolean
  _isModifier: ElementBase
  isSummary: Boolean
  _isSummary: ElementBase
  binding: ElementDefinitionBinding
  mapping: [ElementDefinitionMapping]
}

type ElementDefinitionBase {
  id: String
  extension: [Extension]
  path: String
  _path: ElementBase
  min: unsignedInt
  _min: ElementBase
  max: String
  _max: ElementBase
}

input ElementDefinitionBaseInput {
  id: String
  extension: [ExtensionInput]
  path: String
  _path: ElementBaseInput
  min: unsignedInt
  _min: ElementBaseInput
  max: String
  _max: ElementBaseInput
}

type ElementDefinitionBinding {
  id: String
  extension: [Extension]
  strength: code
  _strength: ElementBase
  description: String
  _description: ElementBase
  valueSetUri: String
  _valueSetUri: ElementBase
  valueSetReference: Reference
}

input ElementDefinitionBindingInput {
  id: String
  extension: [ExtensionInput]
  strength: code
  _strength: ElementBaseInput
  description: String
  _description: ElementBaseInput
  valueSetUri: String
  _valueSetUri: ElementBaseInput
  valueSetReference: ReferenceInput
}

type ElementDefinitionConstraint {
  id: String
  extension: [Extension]
  key: ID
  _key: ElementBase
  requirements: String
  _requirements: ElementBase
  severity: code
  _severity: ElementBase
  human: String
  _human: ElementBase
  expression: String
  _expression: ElementBase
  xpath: String
  _xpath: ElementBase
  source: String
  _source: ElementBase
}

input ElementDefinitionConstraintInput {
  id: String
  extension: [ExtensionInput]
  key: ID
  _key: ElementBaseInput
  requirements: String
  _requirements: ElementBaseInput
  severity: code
  _severity: ElementBaseInput
  human: String
  _human: ElementBaseInput
  expression: String
  _expression: ElementBaseInput
  xpath: String
  _xpath: ElementBaseInput
  source: String
  _source: ElementBaseInput
}

type ElementDefinitionExample {
  id: String
  extension: [Extension]
  label: String
  _label: ElementBase
  valueBase64Binary: base64Binary
  _valueBase64Binary: ElementBase
  valueBoolean: Boolean
  _valueBoolean: ElementBase
  valueCode: code
  _valueCode: ElementBase
  valueDate: Date
  _valueDate: ElementBase
  valueDateTime: dateTime
  _valueDateTime: ElementBase
  valueDecimal: decimal
  _valueDecimal: ElementBase
  valueId: ID
  _valueId: ElementBase
  valueInstant: instant
  _valueInstant: ElementBase
  valueInteger: Int
  _valueInteger: ElementBase
  valueMarkdown: markdown
  _valueMarkdown: ElementBase
  valueOid: oid
  _valueOid: ElementBase
  valuePositiveInt: positiveInt
  _valuePositiveInt: ElementBase
  valueString: String
  _valueString: ElementBase
  valueTime: time
  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt
  _valueUnsignedInt: ElementBase
  valueUri: String
  _valueUri: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueMeta: Meta
}

input ElementDefinitionExampleInput {
  id: String
  extension: [ExtensionInput]
  label: String
  _label: ElementBaseInput
  valueBase64Binary: base64Binary
  _valueBase64Binary: ElementBaseInput
  valueBoolean: Boolean
  _valueBoolean: ElementBaseInput
  valueCode: code
  _valueCode: ElementBaseInput
  valueDate: Date
  _valueDate: ElementBaseInput
  valueDateTime: dateTime
  _valueDateTime: ElementBaseInput
  valueDecimal: decimal
  _valueDecimal: ElementBaseInput
  valueId: ID
  _valueId: ElementBaseInput
  valueInstant: instant
  _valueInstant: ElementBaseInput
  valueInteger: Int
  _valueInteger: ElementBaseInput
  valueMarkdown: markdown
  _valueMarkdown: ElementBaseInput
  valueOid: oid
  _valueOid: ElementBaseInput
  valuePositiveInt: positiveInt
  _valuePositiveInt: ElementBaseInput
  valueString: String
  _valueString: ElementBaseInput
  valueTime: time
  _valueTime: ElementBaseInput
  valueUnsignedInt: unsignedInt
  _valueUnsignedInt: ElementBaseInput
  valueUri: String
  _valueUri: ElementBaseInput
  valueAddress: AddressInput
  valueAge: AgeInput
  valueAnnotation: AnnotationInput
  valueAttachment: AttachmentInput
  valueCodeableConcept: CodeableConceptInput
  valueCoding: CodingInput
  valueContactPoint: ContactPointInput
  valueCount: CountInput
  valueDistance: DistanceInput
  valueDuration: DurationInput
  valueHumanName: HumanNameInput
  valueIdentifier: IdentifierInput
  valueMoney: MoneyInput
  valuePeriod: PeriodInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueRatio: RatioInput
  valueReference: ReferenceInput
  valueSampledData: SampledDataInput
  valueSignature: SignatureInput
  valueTiming: TimingInput
  valueMeta: MetaInput
}

input ElementDefinitionInput {
  id: String
  extension: [ExtensionInput]
  path: String
  _path: ElementBaseInput
  representation: code
  _representation: [ElementBaseInput]
  sliceName: String
  _sliceName: ElementBaseInput
  label: String
  _label: ElementBaseInput
  code: [CodingInput]
  slicing: ElementDefinitionSlicingInput
  short: String
  _short: ElementBaseInput
  definition: markdown
  _definition: ElementBaseInput
  comment: markdown
  _comment: ElementBaseInput
  requirements: markdown
  _requirements: ElementBaseInput
  alias: String
  _alias: [ElementBaseInput]
  min: unsignedInt
  _min: ElementBaseInput
  max: String
  _max: ElementBaseInput
  base: ElementDefinitionBaseInput
  contentReference: String
  _contentReference: ElementBaseInput
  type: [ElementDefinitionTypeInput]
  defaultValueBase64Binary: base64Binary
  _defaultValueBase64Binary: ElementBaseInput
  defaultValueBoolean: Boolean
  _defaultValueBoolean: ElementBaseInput
  defaultValueCode: code
  _defaultValueCode: ElementBaseInput
  defaultValueDate: Date
  _defaultValueDate: ElementBaseInput
  defaultValueDateTime: dateTime
  _defaultValueDateTime: ElementBaseInput
  defaultValueDecimal: decimal
  _defaultValueDecimal: ElementBaseInput
  defaultValueId: ID
  _defaultValueId: ElementBaseInput
  defaultValueInstant: instant
  _defaultValueInstant: ElementBaseInput
  defaultValueInteger: Int
  _defaultValueInteger: ElementBaseInput
  defaultValueMarkdown: markdown
  _defaultValueMarkdown: ElementBaseInput
  defaultValueOid: oid
  _defaultValueOid: ElementBaseInput
  defaultValuePositiveInt: positiveInt
  _defaultValuePositiveInt: ElementBaseInput
  defaultValueString: String
  _defaultValueString: ElementBaseInput
  defaultValueTime: time
  _defaultValueTime: ElementBaseInput
  defaultValueUnsignedInt: unsignedInt
  _defaultValueUnsignedInt: ElementBaseInput
  defaultValueUri: String
  _defaultValueUri: ElementBaseInput
  defaultValueAddress: AddressInput
  defaultValueAge: AgeInput
  defaultValueAnnotation: AnnotationInput
  defaultValueAttachment: AttachmentInput
  defaultValueCodeableConcept: CodeableConceptInput
  defaultValueCoding: CodingInput
  defaultValueContactPoint: ContactPointInput
  defaultValueCount: CountInput
  defaultValueDistance: DistanceInput
  defaultValueDuration: DurationInput
  defaultValueHumanName: HumanNameInput
  defaultValueIdentifier: IdentifierInput
  defaultValueMoney: MoneyInput
  defaultValuePeriod: PeriodInput
  defaultValueQuantity: QuantityInput
  defaultValueRange: RangeInput
  defaultValueRatio: RatioInput
  defaultValueReference: ReferenceInput
  defaultValueSampledData: SampledDataInput
  defaultValueSignature: SignatureInput
  defaultValueTiming: TimingInput
  defaultValueMeta: MetaInput
  meaningWhenMissing: markdown
  _meaningWhenMissing: ElementBaseInput
  orderMeaning: String
  _orderMeaning: ElementBaseInput
  fixedBase64Binary: base64Binary
  _fixedBase64Binary: ElementBaseInput
  fixedBoolean: Boolean
  _fixedBoolean: ElementBaseInput
  fixedCode: code
  _fixedCode: ElementBaseInput
  fixedDate: Date
  _fixedDate: ElementBaseInput
  fixedDateTime: dateTime
  _fixedDateTime: ElementBaseInput
  fixedDecimal: decimal
  _fixedDecimal: ElementBaseInput
  fixedId: ID
  _fixedId: ElementBaseInput
  fixedInstant: instant
  _fixedInstant: ElementBaseInput
  fixedInteger: Int
  _fixedInteger: ElementBaseInput
  fixedMarkdown: markdown
  _fixedMarkdown: ElementBaseInput
  fixedOid: oid
  _fixedOid: ElementBaseInput
  fixedPositiveInt: positiveInt
  _fixedPositiveInt: ElementBaseInput
  fixedString: String
  _fixedString: ElementBaseInput
  fixedTime: time
  _fixedTime: ElementBaseInput
  fixedUnsignedInt: unsignedInt
  _fixedUnsignedInt: ElementBaseInput
  fixedUri: String
  _fixedUri: ElementBaseInput
  fixedAddress: AddressInput
  fixedAge: AgeInput
  fixedAnnotation: AnnotationInput
  fixedAttachment: AttachmentInput
  fixedCodeableConcept: CodeableConceptInput
  fixedCoding: CodingInput
  fixedContactPoint: ContactPointInput
  fixedCount: CountInput
  fixedDistance: DistanceInput
  fixedDuration: DurationInput
  fixedHumanName: HumanNameInput
  fixedIdentifier: IdentifierInput
  fixedMoney: MoneyInput
  fixedPeriod: PeriodInput
  fixedQuantity: QuantityInput
  fixedRange: RangeInput
  fixedRatio: RatioInput
  fixedReference: ReferenceInput
  fixedSampledData: SampledDataInput
  fixedSignature: SignatureInput
  fixedTiming: TimingInput
  fixedMeta: MetaInput
  patternBase64Binary: base64Binary
  _patternBase64Binary: ElementBaseInput
  patternBoolean: Boolean
  _patternBoolean: ElementBaseInput
  patternCode: code
  _patternCode: ElementBaseInput
  patternDate: Date
  _patternDate: ElementBaseInput
  patternDateTime: dateTime
  _patternDateTime: ElementBaseInput
  patternDecimal: decimal
  _patternDecimal: ElementBaseInput
  patternId: ID
  _patternId: ElementBaseInput
  patternInstant: instant
  _patternInstant: ElementBaseInput
  patternInteger: Int
  _patternInteger: ElementBaseInput
  patternMarkdown: markdown
  _patternMarkdown: ElementBaseInput
  patternOid: oid
  _patternOid: ElementBaseInput
  patternPositiveInt: positiveInt
  _patternPositiveInt: ElementBaseInput
  patternString: String
  _patternString: ElementBaseInput
  patternTime: time
  _patternTime: ElementBaseInput
  patternUnsignedInt: unsignedInt
  _patternUnsignedInt: ElementBaseInput
  patternUri: String
  _patternUri: ElementBaseInput
  patternAddress: AddressInput
  patternAge: AgeInput
  patternAnnotation: AnnotationInput
  patternAttachment: AttachmentInput
  patternCodeableConcept: CodeableConceptInput
  patternCoding: CodingInput
  patternContactPoint: ContactPointInput
  patternCount: CountInput
  patternDistance: DistanceInput
  patternDuration: DurationInput
  patternHumanName: HumanNameInput
  patternIdentifier: IdentifierInput
  patternMoney: MoneyInput
  patternPeriod: PeriodInput
  patternQuantity: QuantityInput
  patternRange: RangeInput
  patternRatio: RatioInput
  patternReference: ReferenceInput
  patternSampledData: SampledDataInput
  patternSignature: SignatureInput
  patternTiming: TimingInput
  patternMeta: MetaInput
  example: [ElementDefinitionExampleInput]
  minValueDate: Date
  _minValueDate: ElementBaseInput
  minValueDateTime: dateTime
  _minValueDateTime: ElementBaseInput
  minValueInstant: instant
  _minValueInstant: ElementBaseInput
  minValueTime: time
  _minValueTime: ElementBaseInput
  minValueDecimal: decimal
  _minValueDecimal: ElementBaseInput
  minValueInteger: Int
  _minValueInteger: ElementBaseInput
  minValuePositiveInt: positiveInt
  _minValuePositiveInt: ElementBaseInput
  minValueUnsignedInt: unsignedInt
  _minValueUnsignedInt: ElementBaseInput
  minValueQuantity: QuantityInput
  maxValueDate: Date
  _maxValueDate: ElementBaseInput
  maxValueDateTime: dateTime
  _maxValueDateTime: ElementBaseInput
  maxValueInstant: instant
  _maxValueInstant: ElementBaseInput
  maxValueTime: time
  _maxValueTime: ElementBaseInput
  maxValueDecimal: decimal
  _maxValueDecimal: ElementBaseInput
  maxValueInteger: Int
  _maxValueInteger: ElementBaseInput
  maxValuePositiveInt: positiveInt
  _maxValuePositiveInt: ElementBaseInput
  maxValueUnsignedInt: unsignedInt
  _maxValueUnsignedInt: ElementBaseInput
  maxValueQuantity: QuantityInput
  maxLength: Int
  _maxLength: ElementBaseInput
  condition: ID
  _condition: [ElementBaseInput]
  constraint: [ElementDefinitionConstraintInput]
  mustSupport: Boolean
  _mustSupport: ElementBaseInput
  isModifier: Boolean
  _isModifier: ElementBaseInput
  isSummary: Boolean
  _isSummary: ElementBaseInput
  binding: ElementDefinitionBindingInput
  mapping: [ElementDefinitionMappingInput]
}

type ElementDefinitionMapping {
  id: String
  extension: [Extension]
  identity: ID
  _identity: ElementBase
  language: code
  _language: ElementBase
  map: String
  _map: ElementBase
  comment: String
  _comment: ElementBase
}

input ElementDefinitionMappingInput {
  id: String
  extension: [ExtensionInput]
  identity: ID
  _identity: ElementBaseInput
  language: code
  _language: ElementBaseInput
  map: String
  _map: ElementBaseInput
  comment: String
  _comment: ElementBaseInput
}

type ElementDefinitionSlicing {
  id: String
  extension: [Extension]
  discriminator: [ElementDefinitionSlicingDiscriminator]
  description: String
  _description: ElementBase
  ordered: Boolean
  _ordered: ElementBase
  rules: code
  _rules: ElementBase
}

type ElementDefinitionSlicingDiscriminator {
  id: String
  extension: [Extension]
  type: code
  _type: ElementBase
  path: String
  _path: ElementBase
}

input ElementDefinitionSlicingDiscriminatorInput {
  id: String
  extension: [ExtensionInput]
  type: code
  _type: ElementBaseInput
  path: String
  _path: ElementBaseInput
}

input ElementDefinitionSlicingInput {
  id: String
  extension: [ExtensionInput]
  discriminator: [ElementDefinitionSlicingDiscriminatorInput]
  description: String
  _description: ElementBaseInput
  ordered: Boolean
  _ordered: ElementBaseInput
  rules: code
  _rules: ElementBaseInput
}

type ElementDefinitionType {
  id: String
  extension: [Extension]
  code: String
  _code: ElementBase
  profile: String
  _profile: ElementBase
  targetProfile: String
  _targetProfile: ElementBase
  aggregation: code
  _aggregation: [ElementBase]
  versioning: code
  _versioning: ElementBase
}

input ElementDefinitionTypeInput {
  id: String
  extension: [ExtensionInput]
  code: String
  _code: ElementBaseInput
  profile: String
  _profile: ElementBaseInput
  targetProfile: String
  _targetProfile: ElementBaseInput
  aggregation: code
  _aggregation: [ElementBaseInput]
  versioning: code
  _versioning: ElementBaseInput
}

type Extension {
  id: String
  extension: [Extension]
  url: String
  _url: ElementBase
  valueBase64Binary: base64Binary
  _valueBase64Binary: ElementBase
  valueBoolean: Boolean
  _valueBoolean: ElementBase
  valueCode: code
  _valueCode: ElementBase
  valueDate: Date
  _valueDate: ElementBase
  valueDateTime: dateTime
  _valueDateTime: ElementBase
  valueDecimal: decimal
  _valueDecimal: ElementBase
  valueId: ID
  _valueId: ElementBase
  valueInstant: instant
  _valueInstant: ElementBase
  valueInteger: Int
  _valueInteger: ElementBase
  valueMarkdown: markdown
  _valueMarkdown: ElementBase
  valueOid: oid
  _valueOid: ElementBase
  valuePositiveInt: positiveInt
  _valuePositiveInt: ElementBase
  valueString: String
  _valueString: ElementBase
  valueTime: time
  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt
  _valueUnsignedInt: ElementBase
  valueUri: String
  _valueUri: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueMeta: Meta
}

input ExtensionInput {
  id: String
  extension: [ExtensionInput]
  url: String
  _url: ElementBaseInput
  valueBase64Binary: base64Binary
  _valueBase64Binary: ElementBaseInput
  valueBoolean: Boolean
  _valueBoolean: ElementBaseInput
  valueCode: code
  _valueCode: ElementBaseInput
  valueDate: Date
  _valueDate: ElementBaseInput
  valueDateTime: dateTime
  _valueDateTime: ElementBaseInput
  valueDecimal: decimal
  _valueDecimal: ElementBaseInput
  valueId: ID
  _valueId: ElementBaseInput
  valueInstant: instant
  _valueInstant: ElementBaseInput
  valueInteger: Int
  _valueInteger: ElementBaseInput
  valueMarkdown: markdown
  _valueMarkdown: ElementBaseInput
  valueOid: oid
  _valueOid: ElementBaseInput
  valuePositiveInt: positiveInt
  _valuePositiveInt: ElementBaseInput
  valueString: String
  _valueString: ElementBaseInput
  valueTime: time
  _valueTime: ElementBaseInput
  valueUnsignedInt: unsignedInt
  _valueUnsignedInt: ElementBaseInput
  valueUri: String
  _valueUri: ElementBaseInput
  valueAddress: AddressInput
  valueAge: AgeInput
  valueAnnotation: AnnotationInput
  valueAttachment: AttachmentInput
  valueCodeableConcept: CodeableConceptInput
  valueCoding: CodingInput
  valueContactPoint: ContactPointInput
  valueCount: CountInput
  valueDistance: DistanceInput
  valueDuration: DurationInput
  valueHumanName: HumanNameInput
  valueIdentifier: IdentifierInput
  valueMoney: MoneyInput
  valuePeriod: PeriodInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueRatio: RatioInput
  valueReference: ReferenceInput
  valueSampledData: SampledDataInput
  valueSignature: SignatureInput
  valueTiming: TimingInput
  valueMeta: MetaInput
}

type HumanName {
  id: String
  extension: [Extension]
  use: code
  _use: ElementBase
  text: String
  _text: ElementBase
  family: String
  _family: ElementBase
  given: String
  _given: [ElementBase]
  prefix: String
  _prefix: [ElementBase]
  suffix: String
  _suffix: [ElementBase]
  period: Period
}

input HumanNameInput {
  id: String
  extension: [ExtensionInput]
  use: code
  _use: ElementBaseInput
  text: String
  _text: ElementBaseInput
  family: String
  _family: ElementBaseInput
  given: String
  _given: [ElementBaseInput]
  prefix: String
  _prefix: [ElementBaseInput]
  suffix: String
  _suffix: [ElementBaseInput]
  period: PeriodInput
}

type Identifier {
  id: String
  extension: [Extension]
  use: code
  _use: ElementBase
  type: CodeableConcept
  system: String
  _system: ElementBase
  value: String
  _value: ElementBase
  period: Period
  assigner: Reference
}

input IdentifierInput {
  id: String
  extension: [ExtensionInput]
  use: code
  _use: ElementBaseInput
  type: CodeableConceptInput
  system: String
  _system: ElementBaseInput
  value: String
  _value: ElementBaseInput
  period: PeriodInput
  assigner: ReferenceInput
}

# Type id: use GraphQL scalar type ID
scalar instant

type Login {
  token: String
  message: String
}

type Logout {
  result: Boolean
}

# Type integer: use GraphQL scalar type Int
scalar markdown

type Meta {
  id: String
  extension: [Extension]
  versionId: ID
  _versionId: ElementBase
  lastUpdated: instant
  _lastUpdated: ElementBase
  profile: String
  _profile: [ElementBase]
  security: [Coding]
  tag: [Coding]
}

input MetaInput {
  id: String
  extension: [ExtensionInput]
  versionId: ID
  _versionId: ElementBaseInput
  lastUpdated: instant
  _lastUpdated: ElementBaseInput
  profile: String
  _profile: [ElementBaseInput]
  security: [CodingInput]
  tag: [CodingInput]
}

type Money {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input MoneyInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type Mutation {
  Patient: PatientMutation
  role: RoleMutation
  user: UserMutation
}

type Narrative {
  id: String
  extension: [Extension]
  status: code
  _status: ElementBase
  div: xhtml
  _div: ElementBase
}

input NarrativeInput {
  id: String
  extension: [ExtensionInput]
  status: code
  _status: ElementBaseInput
  div: xhtml
  _div: ElementBaseInput
}

# FHIR Defined Search Parameter Types
scalar number

scalar oid

type OperationOutcome {
  issue: [OperationOutcomeIssue]!
}

type OperationOutcomeIssue {
  severity: OperationOutcomeIssueSeverity!
  code: OperationOutcomeIssueCode!
  details: CodeableConcept
  diagnostics: String
  location: [String]
  expression: [String]
}

# refer to https://www.hl7.org/fhir/valueset-issue-type.html for more details
enum OperationOutcomeIssueCode {
  # Content invalid against the specification or a profile.
  invalid

  # A structural issue in the content such as wrong namespace, or unable to parse
  # the content completely, or invalid json syntax.
  structure
  required
  value
  invariant
  security
  login
  unknown
  expired
  forbidden
  suppressed
  processing
  not_supported
  duplicate
  not_found
  too_long
  code_invalid
  extension
  too_costly
  business_rule
  conflict
  incomplete
  transient
  lock_error
  no_store
  exception
  timeout
  throttled
  informational
}

enum OperationOutcomeIssueSeverity {
  fatal
  error
  warning
  information
}

type ParameterDefinition {
  id: String
  extension: [Extension]
  name: code
  _name: ElementBase
  use: code
  _use: ElementBase
  min: Int
  _min: ElementBase
  max: String
  _max: ElementBase
  documentation: String
  _documentation: ElementBase
  type: code
  _type: ElementBase
  profile: Reference
}

input ParameterDefinitionInput {
  id: String
  extension: [ExtensionInput]
  name: code
  _name: ElementBaseInput
  use: code
  _use: ElementBaseInput
  min: Int
  _min: ElementBaseInput
  max: String
  _max: ElementBaseInput
  documentation: String
  _documentation: ElementBaseInput
  type: code
  _type: ElementBaseInput
  profile: ReferenceInput
}

# FHIR GraphQL Schema. Version 3.1.0-12192
type Patient {
  id: ID
  meta: Meta
  implicitRules: String
  _implicitRules: ElementBase
  language: code
  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: PatientIdentifier!
  name: HumanName!
  telecom: ContactPoint
  gender: code
  _gender: ElementBase
  birthDate: Date!
  _birthDate: ElementBase
  address: Address
  communication: [PatientCommunication]
}

type PatientAnimal {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  species: CodeableConcept!
  breed: CodeableConcept
  genderStatus: CodeableConcept
}

input PatientAnimalInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  species: CodeableConceptInput!
  breed: CodeableConceptInput
  genderStatus: CodeableConceptInput
}

type PatientCommunication {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  language: CodeableConcept!
  preferred: Boolean
  _preferred: ElementBase
}

input PatientCommunicationInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  language: CodeableConceptInput!
  preferred: Boolean
  _preferred: ElementBaseInput
}

type PatientConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [PatientEdge]
}

type PatientContact {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relationship: [CodeableConcept]
  name: HumanName
  telecom: [ContactPoint]
  address: Address
  gender: code
  _gender: ElementBase
  organization: Reference
  period: Period
}

input PatientContactInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  relationship: [CodeableConceptInput]
  name: HumanNameInput
  telecom: [ContactPointInput]
  address: AddressInput
  gender: code
  _gender: ElementBaseInput
  organization: ReferenceInput
  period: PeriodInput
}

type PatientCreation {
  location: String
  resource: Patient
  information: OperationOutcome
}

type PatientDelete {
  information: OperationOutcome
}

type PatientEdge {
  mode: String
  score: Float
  resource: Patient
}

type PatientIdentifier {
  id: String
  extension: [Extension]
  use: code
  _use: ElementBase
  type: CodeableConcept
  system: String!
  _system: ElementBase
  value: String!
  _value: ElementBase
  period: Period
  assigner: Reference
}

input PatientIdentifierInput {
  id: String
  extension: [ExtensionInput]
  use: code
  _use: ElementBaseInput
  type: CodeableConceptInput
  system: String
  _system: ElementBaseInput
  value: String!
  _value: ElementBaseInput
  period: PeriodInput
  assigner: ReferenceInput
}

input PatientInput {
  id: ID
  meta: MetaInput
  implicitRules: String
  _implicitRules: ElementBaseInput
  language: code
  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: PatientIdentifierInput!
  name: HumanNameInput!
  telecom: ContactPointInput
  gender: code
  _gender: ElementBaseInput
  birthDate: Date!
  _birthDate: ElementBaseInput
  address: AddressInput
  communication: [PatientCommunicationInput]
}

type PatientLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  otReference: Reference
  type: code
  _type: ElementBase
}

input PatientLinkInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  otReference: ReferenceInput
  type: code
  _type: ElementBaseInput
}

type PatientMutation {
  delete(id: ID): PatientDelete
  update(id: ID, resource: PatientInput): PatientUpdate
  create(resource: PatientInput): PatientCreation
}

type PatientQuery {
  connection(_filter: String, active: [token], address: [String], address_city: [String], address_country: [String], address_postalcode: [String], address_state: [String], address_use: [token], animal_breed: [token], animal_species: [token], birthdate: [Date], death_date: [Date], deceased: [token], email: [token], family: [String], gender: [token], general_practitioner: [reference], given: [String], identifier: [token], language: [token], link: [reference], name: [String], organization: [reference], phone: [token], phonetic: [String], telecom: [token], _text: [String], _content: [String], _id: [token], _lastUpdated: [Date], _profile: [String], _query: [token], _security: [token], _tag: [token], _sort: String, _count: Int, _cursor: String): PatientConnection
  list(_filter: String, active: [token], address: [String], address_city: [String], address_country: [String], address_postalcode: [String], address_state: [String], address_use: [token], animal_breed: [token], animal_species: [token], birthdate: [Date], death_date: [Date], deceased: [token], email: [token], family: [String], gender: [token], general_practitioner: [reference], given: [String], identifier: [token], language: [token], link: [reference], name: [String], organization: [reference], phone: [token], phonetic: [String], telecom: [token], _text: [String], _content: [String], _id: [token], _lastUpdated: [Date], _profile: [String], _query: [token], _security: [token], _tag: [token], _sort: String, _count: Int, _cursor: String): [Patient]
  read(id: ID!): Patient
}

type PatientUpdate {
  resource: Patient
  information: OperationOutcome
}

type Period {
  id: String
  extension: [Extension]
  start: dateTime
  _start: ElementBase
  end: dateTime
  _end: ElementBase
}

input PeriodInput {
  id: String
  extension: [ExtensionInput]
  start: dateTime
  _start: ElementBaseInput
  end: dateTime
  _end: ElementBaseInput
}

enum permissionsEnum {
  create
  upsert
  upsertOwn
  remove
  removeOwn
  find
  findOwn
  findOne
  findOneOwn
  login
  logout
  register
  changePassword
  changeOwnPassword
  findRoles
  findOwnRoles
  syncRoles
  none
}

scalar positiveInt

scalar quantity

type Quantity {
  id: String
  extension: [Extension]
  value: decimal
  _value: ElementBase
  comparator: code
  _comparator: ElementBase
  unit: String
  _unit: ElementBase
  system: String
  _system: ElementBase
  code: code
  _code: ElementBase
}

input QuantityInput {
  id: String
  extension: [ExtensionInput]
  value: decimal
  _value: ElementBaseInput
  comparator: code
  _comparator: ElementBaseInput
  unit: String
  _unit: ElementBaseInput
  system: String
  _system: ElementBaseInput
  code: code
  _code: ElementBaseInput
}

type Query {
  Patient: PatientQuery
  role: RoleQuery
  user: UserQuery
}

type Range {
  id: String
  extension: [Extension]
  low: Quantity
  high: Quantity
}

input RangeInput {
  id: String
  extension: [ExtensionInput]
  low: QuantityInput
  high: QuantityInput
}

type Ratio {
  id: String
  extension: [Extension]
  numerator: Quantity
  denominator: Quantity
}

input RatioInput {
  id: String
  extension: [ExtensionInput]
  numerator: QuantityInput
  denominator: QuantityInput
}

scalar reference

type Reference {
  id: String
  extension: [Extension]
  reference: String
  _reference: ElementBase
  identifier: Identifier
  display: String
  _display: ElementBase
}

input ReferenceInput {
  id: String
  extension: [ExtensionInput]
  reference: String
  _reference: ElementBaseInput
  identifier: IdentifierInput
  display: String
  _display: ElementBaseInput
}

type RelatedArtifact {
  id: String
  extension: [Extension]
  type: code
  _type: ElementBase
  display: String
  _display: ElementBase
  citation: String
  _citation: ElementBase
  url: String
  _url: ElementBase
  document: Attachment
  resource: Reference
}

input RelatedArtifactInput {
  id: String
  extension: [ExtensionInput]
  type: code
  _type: ElementBaseInput
  display: String
  _display: ElementBaseInput
  citation: String
  _citation: ElementBaseInput
  url: String
  _url: ElementBaseInput
  document: AttachmentInput
  resource: ReferenceInput
}

# Base Resource
type Resource {
  resourceType: String
  id: ID
  meta: Meta
  implicitRules: String
  _implicitRules: ElementBase
  language: String
  _language: ElementBase
}

# Base Resource
input ResourceInput {
  resourceType: String
  id: ID
  meta: MetaInput
  implicitRules: String
  _implicitRules: ElementBaseInput
  language: String
  _language: ElementBaseInput
}

enum resourcesEnum {
  newCar
  usedCar
  checkedCar
  role
  user
  config
}

input ResourcesInput {
  resources: [resourcesEnum]
  permissions: [permissionsEnum]
}

type Role {
  roles: String
  allows: [Allows]
}

input RoleInput {
  roles: String
  allows: [ResourcesInput]
}

type RoleMutation {
  upsert(data: RoleInput!): Role
  remove(role: ID!): ID
}

type RoleQuery {
  find: [String]
  findOne(role: ID!): Role
}

type SampledData {
  id: String
  extension: [Extension]
  origin: Quantity!
  period: decimal
  _period: ElementBase
  factor: decimal
  _factor: ElementBase
  lowerLimit: decimal
  _lowerLimit: ElementBase
  upperLimit: decimal
  _upperLimit: ElementBase
  dimensions: positiveInt
  _dimensions: ElementBase
  data: String
  _data: ElementBase
}

input SampledDataInput {
  id: String
  extension: [ExtensionInput]
  origin: QuantityInput!
  period: decimal
  _period: ElementBaseInput
  factor: decimal
  _factor: ElementBaseInput
  lowerLimit: decimal
  _lowerLimit: ElementBaseInput
  upperLimit: decimal
  _upperLimit: ElementBaseInput
  dimensions: positiveInt
  _dimensions: ElementBaseInput
  data: String
  _data: ElementBaseInput
}

type Signature {
  id: String
  extension: [Extension]
  type: [Coding]!
  when: instant
  _when: ElementBase
  whoUri: String
  _whoUri: ElementBase
  whoReference: Reference
  onBehalfOfUri: String
  _onBehalfOfUri: ElementBase
  onBehalfOfReference: Reference
  contentType: code
  _contentType: ElementBase
  blob: base64Binary
  _blob: ElementBase
}

input SignatureInput {
  id: String
  extension: [ExtensionInput]
  type: [CodingInput]!
  when: instant
  _when: ElementBaseInput
  whoUri: String
  _whoUri: ElementBaseInput
  whoReference: ReferenceInput
  onBehalfOfUri: String
  _onBehalfOfUri: ElementBaseInput
  onBehalfOfReference: ReferenceInput
  contentType: code
  _contentType: ElementBaseInput
  blob: base64Binary
  _blob: ElementBaseInput
}

type SyncRoles {
  id: String
  roles: [String]
}

# Type string: use GraphQL scalar type String
scalar time

type Timing {
  id: String
  extension: [Extension]
  event: dateTime
  _event: [ElementBase]
  repeat: TimingRepeat
  code: CodeableConcept
}

input TimingInput {
  id: String
  extension: [ExtensionInput]
  event: dateTime
  _event: [ElementBaseInput]
  repeat: TimingRepeatInput
  code: CodeableConceptInput
}

type TimingRepeat {
  id: String
  extension: [Extension]
  boundsDuration: Duration
  boundsRange: Range
  boundsPeriod: Period
  count: Int
  _count: ElementBase
  countMax: Int
  _countMax: ElementBase
  duration: decimal
  _duration: ElementBase
  durationMax: decimal
  _durationMax: ElementBase
  durationUnit: code
  _durationUnit: ElementBase
  frequency: Int
  _frequency: ElementBase
  frequencyMax: Int
  _frequencyMax: ElementBase
  period: decimal
  _period: ElementBase
  periodMax: decimal
  _periodMax: ElementBase
  periodUnit: code
  _periodUnit: ElementBase
  dayOfWeek: code
  _dayOfWeek: [ElementBase]
  timeOfDay: time
  _timeOfDay: [ElementBase]
  when: code
  _when: [ElementBase]
  offset: unsignedInt
  _offset: ElementBase
}

input TimingRepeatInput {
  id: String
  extension: [ExtensionInput]
  boundsDuration: DurationInput
  boundsRange: RangeInput
  boundsPeriod: PeriodInput
  count: Int
  _count: ElementBaseInput
  countMax: Int
  _countMax: ElementBaseInput
  duration: decimal
  _duration: ElementBaseInput
  durationMax: decimal
  _durationMax: ElementBaseInput
  durationUnit: code
  _durationUnit: ElementBaseInput
  frequency: Int
  _frequency: ElementBaseInput
  frequencyMax: Int
  _frequencyMax: ElementBaseInput
  period: decimal
  _period: ElementBaseInput
  periodMax: decimal
  _periodMax: ElementBaseInput
  periodUnit: code
  _periodUnit: ElementBaseInput
  dayOfWeek: code
  _dayOfWeek: [ElementBaseInput]
  timeOfDay: time
  _timeOfDay: [ElementBaseInput]
  when: code
  _when: [ElementBaseInput]
  offset: unsignedInt
  _offset: ElementBaseInput
}

# Search Param string: use GraphQL scalar type String
scalar token

type TriggerDefinition {
  id: String
  extension: [Extension]
  type: code
  _type: ElementBase
  eventName: String
  _eventName: ElementBase
  eventTimingTiming: Timing
  eventTimingReference: Reference
  eventTimingDate: Date
  _eventTimingDate: ElementBase
  eventTimingDateTime: dateTime
  _eventTimingDateTime: ElementBase
  eventData: DataRequirement
  eventCondition: TriggerDefinitionEventCondition
}

type TriggerDefinitionEventCondition {
  id: String
  extension: [Extension]
  description: String
  _description: ElementBase
  language: String
  _language: ElementBase
  expression: String
  _expression: ElementBase
}

input TriggerDefinitionEventConditionInput {
  id: String
  extension: [ExtensionInput]
  description: String
  _description: ElementBaseInput
  language: String
  _language: ElementBaseInput
  expression: String
  _expression: ElementBaseInput
}

input TriggerDefinitionInput {
  id: String
  extension: [ExtensionInput]
  type: code
  _type: ElementBaseInput
  eventName: String
  _eventName: ElementBaseInput
  eventTimingTiming: TimingInput
  eventTimingReference: ReferenceInput
  eventTimingDate: Date
  _eventTimingDate: ElementBaseInput
  eventTimingDateTime: dateTime
  _eventTimingDateTime: ElementBaseInput
  eventData: DataRequirementInput
  eventCondition: TriggerDefinitionEventConditionInput
}

scalar unsignedInt

type UsageContext {
  id: String
  extension: [Extension]
  code: Coding!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
}

input UsageContextInput {
  id: String
  extension: [ExtensionInput]
  code: CodingInput!
  valueCodeableConcept: CodeableConceptInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
}

type User {
  _id: String
  email: String
  username: String
  password: String
}

input UserInput {
  _id: String
  email: String
  username: String
  password: String
}

type UserMutation {
  login(username: String, password: String): Login
  logout: Logout
  register(data: UserInput!): User
  upsert(data: UserInput!): User
  syncRoles(id: String!, roles: [String]!): SyncRoles
  changePassword(id: String!, password: String!): Boolean
}

type UserQuery {
  find: [User]
  findOne(id: ID!): User
  findRoles(id: ID!): [ID]
}

scalar uuid

scalar xhtml
